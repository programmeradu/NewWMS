trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: 'Install Node.js'

    - script: |
        cd client
        npm install
        npm run build
      displayName: 'Build Client'

    - script: |
        cd truck-dashboard
        npm install
        npm run build
      displayName: 'Build Truck Dashboard'

    - script: |
        cd server
        npm install
      displayName: 'Install Server Dependencies'

    - script: |
        mkdir $(Build.ArtifactStagingDirectory)/app
        cp -r server/* $(Build.ArtifactStagingDirectory)/app
        cp -r client/build $(Build.ArtifactStagingDirectory)/app/client
        cp -r truck-dashboard/build $(Build.ArtifactStagingDirectory)/app/truck-dashboard
      displayName: 'Combine build outputs'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/app'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
        replaceExistingArchive: true
      displayName: 'Archive combined build output'

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'drop'
        publishLocation: 'Container'
      displayName: 'Publish build artifacts'

- stage: Deploy
  dependsOn: Build
  jobs:
  - deployment: DeployApp
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Microsoft Azure Sponsorship (6bfc4009-1ce0-4b95-8507-6481a8b4168d)'
              appType: 'webAppLinux'
              WebAppName: 'stagreen'
              packageForLinux: '$(Pipeline.Workspace)/**/app.zip'
              RuntimeStack: 'NODE|18-lts'